// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SimplStudy.DBContexts;

#nullable disable

namespace SimplStudy.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.AddressesPoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AdressesPoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Ленина, 32"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Уссурийская, 47"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Братская, 55"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Петровсеая, 32"
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressesPointId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressesPointId");

                    b.ToTable("Buyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressesPointId = 1,
                            Name = "Орлов К.Ч."
                        },
                        new
                        {
                            Id = 2,
                            AddressesPointId = 1,
                            Name = "Шмелев С.С."
                        },
                        new
                        {
                            Id = 3,
                            AddressesPointId = 2,
                            Name = "Синичкин К.П."
                        },
                        new
                        {
                            Id = 4,
                            AddressesPointId = 3,
                            Name = "Ястребов А.А."
                        },
                        new
                        {
                            Id = 5,
                            AddressesPointId = 4,
                            Name = "Курков П.П."
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Часы наручные"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Фотокамеры"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Процессоры"
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Delivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateReceipt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Deliveries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOrder = new DateTime(2023, 8, 8, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2278),
                            DateReceipt = new DateTime(2023, 8, 10, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2284)
                        },
                        new
                        {
                            Id = 2,
                            DateOrder = new DateTime(2023, 8, 7, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2285),
                            DateReceipt = new DateTime(2023, 8, 10, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2285)
                        },
                        new
                        {
                            Id = 3,
                            DateOrder = new DateTime(2023, 8, 6, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2286),
                            DateReceipt = new DateTime(2023, 8, 11, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2287)
                        },
                        new
                        {
                            Id = 4,
                            DateOrder = new DateTime(2023, 8, 5, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2287),
                            DateReceipt = new DateTime(2023, 8, 12, 13, 11, 31, 212, DateTimeKind.Utc).AddTicks(2288)
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Item", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("integer");

                    b.Property<int>("BuyerId")
                        .HasColumnType("integer");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.Property<int>("DeliveryId")
                        .HasColumnType("integer");

                    b.Property<int>("Count")
                        .HasColumnType("integer");

                    b.Property<int>("OrderId")
                        .HasColumnType("integer");

                    b.HasKey("ProductId", "BuyerId", "SellerId", "DeliveryId");

                    b.HasIndex("BuyerId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("OrderId");

                    b.HasIndex("SellerId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            BuyerId = 1,
                            SellerId = 1,
                            DeliveryId = 1,
                            Count = 2,
                            OrderId = 1
                        },
                        new
                        {
                            ProductId = 2,
                            BuyerId = 1,
                            SellerId = 1,
                            DeliveryId = 2,
                            Count = 2,
                            OrderId = 1
                        },
                        new
                        {
                            ProductId = 3,
                            BuyerId = 2,
                            SellerId = 1,
                            DeliveryId = 1,
                            Count = 3,
                            OrderId = 2
                        },
                        new
                        {
                            ProductId = 4,
                            BuyerId = 2,
                            SellerId = 2,
                            DeliveryId = 1,
                            Count = 4,
                            OrderId = 2
                        },
                        new
                        {
                            ProductId = 3,
                            BuyerId = 3,
                            SellerId = 2,
                            DeliveryId = 2,
                            Count = 1,
                            OrderId = 3
                        },
                        new
                        {
                            ProductId = 2,
                            BuyerId = 3,
                            SellerId = 2,
                            DeliveryId = 2,
                            Count = 1,
                            OrderId = 3
                        },
                        new
                        {
                            ProductId = 3,
                            BuyerId = 3,
                            SellerId = 3,
                            DeliveryId = 3,
                            Count = 1,
                            OrderId = 3
                        },
                        new
                        {
                            ProductId = 4,
                            BuyerId = 3,
                            SellerId = 4,
                            DeliveryId = 4,
                            Count = 2,
                            OrderId = 3
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Manager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressesPointId")
                        .HasColumnType("integer");

                    b.Property<int>("HoursProduction")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AddressesPointId");

                    b.ToTable("Managers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressesPointId = 1,
                            HoursProduction = 120,
                            Name = "Петров А.А."
                        },
                        new
                        {
                            Id = 2,
                            AddressesPointId = 2,
                            HoursProduction = 220,
                            Name = "Сидоров А.Б."
                        },
                        new
                        {
                            Id = 3,
                            AddressesPointId = 3,
                            HoursProduction = 50,
                            Name = "Репин Б.В."
                        },
                        new
                        {
                            Id = 4,
                            AddressesPointId = 4,
                            HoursProduction = 90,
                            Name = "Жабин У.А."
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TotalCount")
                        .HasColumnType("integer");

                    b.Property<int>("TotalPrice")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TotalCount = 0,
                            TotalPrice = 0
                        },
                        new
                        {
                            Id = 2,
                            TotalCount = 0,
                            TotalPrice = 0
                        },
                        new
                        {
                            Id = 3,
                            TotalCount = 0,
                            TotalPrice = 0
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "COROS Apex 46mm",
                            Price = 2300,
                            Weight = 30f
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Garmin Fenix 7",
                            Price = 4400,
                            Weight = 40f
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "Garmin Forerunner 945",
                            Price = 5300,
                            Weight = 41f
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "COROS Pace 2",
                            Price = 1820,
                            Weight = 33f
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Белов Ч.Ч."
                        },
                        new
                        {
                            Id = 2,
                            Name = "Чернов К.Т."
                        },
                        new
                        {
                            Id = 3,
                            Name = "Краснов Х.Т."
                        },
                        new
                        {
                            Id = 4,
                            Name = "Корнев М.М."
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AddressesPointId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AddressesPointId");

                    b.HasIndex("SellerId");

                    b.ToTable("Stores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressesPointId = 1,
                            Name = "Shop1",
                            SellerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AddressesPointId = 2,
                            Name = "Shop2",
                            SellerId = 2
                        },
                        new
                        {
                            Id = 3,
                            AddressesPointId = 3,
                            Name = "Shop3",
                            SellerId = 3
                        },
                        new
                        {
                            Id = 4,
                            AddressesPointId = 4,
                            Name = "Shop4",
                            SellerId = 4
                        });
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Buyer", b =>
                {
                    b.HasOne("SimplStudy.Models.DataBaseModels.AddressesPoint", "ActiveAddressesPoint")
                        .WithMany("Buyers")
                        .HasForeignKey("AddressesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveAddressesPoint");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Item", b =>
                {
                    b.HasOne("SimplStudy.Models.DataBaseModels.Buyer", "ActiveBuyer")
                        .WithMany("Items")
                        .HasForeignKey("BuyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplStudy.Models.DataBaseModels.Delivery", "ActiveDelivery")
                        .WithMany("Items")
                        .HasForeignKey("DeliveryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplStudy.Models.DataBaseModels.Order", "ActiveOrder")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplStudy.Models.DataBaseModels.Product", "ActiveProduct")
                        .WithMany("Items")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplStudy.Models.DataBaseModels.Seller", "ActiveSeller")
                        .WithMany("Items")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveBuyer");

                    b.Navigation("ActiveDelivery");

                    b.Navigation("ActiveOrder");

                    b.Navigation("ActiveProduct");

                    b.Navigation("ActiveSeller");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Manager", b =>
                {
                    b.HasOne("SimplStudy.Models.DataBaseModels.AddressesPoint", "ActiveAddressesPoint")
                        .WithMany("Managers")
                        .HasForeignKey("AddressesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveAddressesPoint");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Product", b =>
                {
                    b.HasOne("SimplStudy.Models.DataBaseModels.Category", "ActiveCategory")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveCategory");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Store", b =>
                {
                    b.HasOne("SimplStudy.Models.DataBaseModels.AddressesPoint", "ActiveAddressesPoint")
                        .WithMany("Stores")
                        .HasForeignKey("AddressesPointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SimplStudy.Models.DataBaseModels.Seller", "ActiveSeller")
                        .WithMany("Stores")
                        .HasForeignKey("SellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveAddressesPoint");

                    b.Navigation("ActiveSeller");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.AddressesPoint", b =>
                {
                    b.Navigation("Buyers");

                    b.Navigation("Managers");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Buyer", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Delivery", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Product", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("SimplStudy.Models.DataBaseModels.Seller", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Stores");
                });
#pragma warning restore 612, 618
        }
    }
}
